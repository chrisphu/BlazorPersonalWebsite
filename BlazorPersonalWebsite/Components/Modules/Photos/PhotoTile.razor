<div class="aspect-square w-full h-full flex items-center justify-center" style="transform: rotate(@(Rotation)deg)">
    <PhotoButton Src="@(Src)"
                 AspectRatio="@(AspectRatio)"
                 Alt="@(Alt)"
                 OnClick="@(OnClick)"/>
    @* <p class="text-center mt-1"> *@
    @*     <SubtleText>@(Caption)</SubtleText> *@
    @* </p> *@
</div>

@code {
    [Parameter] public string Src { get; set; } = "/";
    [Parameter] public string AspectRatio { get; set; } = "1/1";
    [Parameter] public string Alt { get; set; } = "";
    // [Parameter] public string Caption { get; set; } = "";
    [Parameter] public float Rotation { get; set; } = 0;
    [Parameter] public EventCallback<string> OnClick { get; set; }
    
    private Task OnClickTask(MouseEventArgs e)
    {
        return OnClick.InvokeAsync(Src);
    }
    
    // // Had issues safelisting the necessary tailwindcss classes for this. Thought the following would work but it
    // // didn't: @source inline("{-,}-rotate-[{0..360..2.5}deg]"); Opting to just use style instead.
    // private string _rotateClass = "rotate";
    //
    // private void CheckForNegativeRotation()
    // {
    //     if (Rotation >= 0)
    //     {
    //         return;
    //     }
    //     
    //     _rotateClass = "-rotate";
    //     Rotation = Math.Abs(Rotation);
    // }
    //
    // // https://stackoverflow.com/a/61554592/24438534
    // private Task StartupTask()
    // {
    //     return Task.CompletedTask;
    // }
    //
    // protected override async Task OnInitializedAsync()
    // {
    //     CheckForNegativeRotation();
    //     await StartupTask();
    // }
}